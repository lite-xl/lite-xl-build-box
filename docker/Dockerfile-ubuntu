# Copyright (c) 2023-Present Lite XL Contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

FROM ubuntu:18.04

ARG TARGETARCH

# copy entrypoint into image
COPY entrypoint.sh /

# install deps
RUN apt-get update && apt-get -y upgrade && \
	apt-get install -y software-properties-common && \
	add-apt-repository -y ppa:git-core/ppa && \
	apt-get update && apt-get -y upgrade && \
	apt-get install -y sudo ccache curl wget python3.8 python3-pip build-essential \
		zip unzip git cmake wayland-protocols libsdl2-dev clang desktop-file-utils && \
	rm -rf /var/lib/apt/lists/*

# install cross compiler
RUN if [ $TARGETARCH = 'amd64' ]; then \
		apt-get update && apt-get -y upgrade && \
		apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu && \
		rm -rf /var/lib/apt/lists/*; \
	fi

# install meson and ninja
RUN python3.8 -m pip install --no-cache-dir --no-compile --upgrade pip && \
	python3.8 -m pip install --no-cache-dir --no-compile meson ninja

# install appimagetool and friends
RUN set -eux; \
	arch=; \
	tools="bsdtar mksquashfs unsquashfs desktop-file-install desktop-file-validate update-desktop-database appstreamcli zsyncmake"; \
	case $TARGETARCH in \
	'arm64') \
		arch="aarch64"; \
		;; \
	'amd64') \
		arch="x86_64"; \
		;; \
	'arm') \
		arch="armhf"; \
		;; \
	'386') \
		arch="i686"; \
		;; \
    *) \
		echo >&2 "error: Unsupported architecture $TARGETARCH"; \
		exit 1; \
		;; \
	esac; \
	mkdir -p /opt/appimagetool/bin; \
	wget -O /opt/appimagetool/bin/appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-$arch.AppImage"; \
	for tool in $tools; do \
		wget -O /opt/appimagetool/bin/$tool "https://github.com/probonopd/static-tools/releases/download/continuous/$tool-$arch"; \
	done; \
	chmod -R +x /opt/appimagetool/bin

# tell appimages to extract themselves before running
ENV APPIMAGE_EXTRACT_AND_RUN=1

# add appimagetool to PATH
ENV PATH="/opt/appimagetool/bin:$PATH"

# pretend to have libdecor
RUN wget "http://archive.ubuntu.com/ubuntu/pool/main/libd/libdecor-0/libdecor-0-dev_0.1.0-3build1_amd64.deb" && \
	dpkg --force-all -i "libdecor-0-dev_0.1.0-3build1_amd64.deb" && \
	rm -f "libdecor-0-dev_0.1.0-3build1_amd64.deb" && \
	perl -i~ -pe 's|\QDepends: libdecor-0-0 (= 0.1.0-3build1), libwayland-dev\E\n||g' /var/lib/dpkg/status && \
	touch /usr/lib/$(dpkg-architecture -q DEB_TARGET_MULTIARCH)/libdecor-0.so /usr/lib/$(dpkg-architecture -q DEB_TARGET_MULTIARCH)/libdecor-0.so.0